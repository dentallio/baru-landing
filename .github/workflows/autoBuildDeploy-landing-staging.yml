name: Auto-Build-Deploy-Landing-Staging
on:
  push:
    tags:
      - 'stg-*.*.*'
env:
  PROJECT_ID: ${{ secrets.DENTALTW_GCP_PROJECT_ID }}
  SERVICE_NAME: dentall-lab
jobs:
  setEnv:
    if: contains( github.event.base_ref, 'main')
    runs-on: ubuntu-latest
    outputs:
      SOURCE_TAG: ${{ steps.step1.outputs.SOURCE_TAG }}
    steps:
      - uses: actions/checkout@master
      - name: Set env
        id: step1
        run: |
          echo "TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/*/}
          echo ${{github.event.base_ref}}
      - name: View tag
        run: |
          echo $TAG
  buildLandingServerToGcr:
    needs: setEnv
    if: contains( github.event.base_ref, 'main')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: /
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_email: ${{ secrets.DENTALTW_GCP_SV_EMAIL }}
          service_account_key: ${{ secrets.DENTALTW_GCP_KEY }}
          project_id: ${{ secrets.DENTALTW_GCP_PROJECT_ID }}
          export_default_credentials: true
      - name: Configure Docker
        run: |
          gcloud auth configure-docker
      - name: Build
        run: |
          docker build --build-arg ENV_SETTING=staging -t gcr.io/$PROJECT_ID/$SERVICE_NAME/staging/landing:${{ needs.setEnv.outputs.SOURCE_TAG }} -f Dockerfile .
      - name: Push
        run: |
          docker push gcr.io/$PROJECT_ID/$SERVICE_NAME/staging/landing:${{ needs.setEnv.outputs.SOURCE_TAG }}
      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()
  deployLandingToGke:
    needs: [ setEnv, buildLandingServerToGcr ]
    if: contains( github.event.base_ref, 'main')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: k8s/staging
    steps:
      - name: Checkout
        uses: actions/checkout@master
        # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_email: ${{ secrets.GCP_SV_EMAIL }}
          service_account_key: ${{ secrets.GCP_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true
      - name: Deploy
        run: |
          gcloud --quiet config set project ${{ secrets.DENTALTW_GCP_PROJECT_ID }}
          gcloud --quiet config set compute/region ${{ secrets.CLUSTER_REGION }}
          gcloud --quiet components install kubectl
          gcloud container clusters get-credentials ${{ secrets.K8S_CLUSTER }}
          kubectl config set-context --current --namespace=${{ secrets.K8S_NAMESPACE }}
          sed -e 's|LAB_LANDING_VERSION_TAG|'"${{ needs.setEnv.outputs.SOURCE_TAG }}"'|g' deployment.yml | kubectl apply -f -